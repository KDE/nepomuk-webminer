/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _ARTICLE_H_
#define _ARTICLE_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Collection;

}

#include "publication.h"


namespace Nepomuk2 {

    /**
     * An article from a journal or magazine. 
     */
    class  Article : public Publication
    {
    public:
        /**
         * Create a new empty and invalid Article instance
         */
        Article();

        /**
         * Default copy constructor
         */
        Article( const Article& );
        Article( const Resource& );

        /**
         * Create a new Article instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        Article( const QString& uriOrIdentifier );

        /**
         * Create a new Article instance representing the resource
         * referenced by \a uri.
         */
        Article( const QUrl& uri );
        ~Article();

        Article& operator=( const Article& );

        /**
         * Get property 'collection'. The collection this article was 
         * published in (for example a Journalissue, Newspaper or Proceedings 
         */
        QList<Collection> collections() const;

        /**
         * Set property 'collection'. The collection this article was 
         * published in (for example a Journalissue, Newspaper or Proceedings 
         */
        void setCollections( const QList<Collection>& value );

        /**
         * Add a value to property 'collection'. The collection this article 
         * was published in (for example a Journalissue, Newspaper or 
         * Proceedings 
         */
        void addCollection( const Collection& value );

        /**
         * Get property 'collection'. The collection this article was 
         * published in (for example a Journalissue, Newspaper or Proceedings 
         */
        Collection collection() const;

        /**
         * Set property 'collection'. The collection this article was 
         * published in (for example a Journalissue, Newspaper or Proceedings 
         */
        void setCollection( const Collection& value );

        /**
         * \return The URI of the property 'collection'. 
         */
        static QUrl collectionUri();

        /**
         * Retrieve a list of all available Article resources. This list 
         * consists of all resource of type Article that are stored in the 
         * local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<Article> allArticles();


        /**
         * \return The URI of the resource type that is used in Article instances.
         */
        static QString resourceTypeUri();

    protected:
       Article( const QString& uri, const QUrl& type );
       Article( const QUrl& uri, const QUrl& type );
    };
}

#endif
