/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _DOCUMENTSTATUS_H_
#define _DOCUMENTSTATUS_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Publication;

}

#include <Nepomuk2/Resource>


namespace Nepomuk2 {

    /**
     * The status of the publication of a document. 
     */
    class  DocumentStatus : public Resource
    {
    public:
        /**
         * Create a new empty and invalid DocumentStatus instance
         */
        DocumentStatus();

        /**
         * Default copy constructor
         */
        DocumentStatus( const DocumentStatus& );
        DocumentStatus( const Resource& );

        /**
         * Create a new DocumentStatus instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        DocumentStatus( const QString& uriOrIdentifier );

        /**
         * Create a new DocumentStatus instance representing the resource
         * referenced by \a uri.
         */
        DocumentStatus( const QUrl& uri );
        ~DocumentStatus();

        DocumentStatus& operator=( const DocumentStatus& );

        /**
         * Get all resources that have this resource set as property 'documentStatus'. 
         * The status of the publication of a document. \sa ResourceManager::allResourcesWithProperty 
         */
        QList<Publication> documentStatusOf() const;

        /**
         * Retrieve a list of all available DocumentStatus resources. 
         * This list consists of all resource of type DocumentStatus that 
         * are stored in the local Nepomuk meta data storage and any changes 
         * made locally. Be aware that in some cases this list can get very 
         * big. Then it might be better to use libKNep directly. 
         */
        static QList<DocumentStatus> allDocumentStatuss();


        /**
         * \return The URI of the resource type that is used in DocumentStatus instances.
         */
        static QString resourceTypeUri();

    protected:
       DocumentStatus( const QString& uri, const QUrl& type );
       DocumentStatus( const QUrl& uri, const QUrl& type );
    };
}

#endif
