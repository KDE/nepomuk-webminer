/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _CHAPTER_H_
#define _CHAPTER_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {

}

#include "documentpart.h"


namespace Nepomuk2 {

    /**
     * A chapter of a publication. 
     */
    class  Chapter : public DocumentPart
    {
    public:
        /**
         * Create a new empty and invalid Chapter instance
         */
        Chapter();

        /**
         * Default copy constructor
         */
        Chapter( const Chapter& );
        Chapter( const Resource& );

        /**
         * Create a new Chapter instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        Chapter( const QString& uriOrIdentifier );

        /**
         * Create a new Chapter instance representing the resource
         * referenced by \a uri.
         */
        Chapter( const QUrl& uri );
        ~Chapter();

        Chapter& operator=( const Chapter& );

        /**
         * Get property 'chapterNumber'. The number of the Chapter for 
         * example 1.2, II etc 
         */
        QStringList chapterNumbers() const;

        /**
         * Set property 'chapterNumber'. The number of the Chapter for 
         * example 1.2, II etc 
         */
        void setChapterNumbers( const QStringList& value );

        /**
         * Add a value to property 'chapterNumber'. The number of the Chapter 
         * for example 1.2, II etc 
         */
        void addChapterNumber( const QString& value );

        /**
         * Get property 'chapterNumber'. The number of the Chapter for 
         * example 1.2, II etc 
         */
        QString chapterNumber() const;

        /**
         * Set property 'chapterNumber'. The number of the Chapter for 
         * example 1.2, II etc 
         */
        void setChapterNumber( const QString& value );

        /**
         * \return The URI of the property 'chapterNumber'. 
         */
        static QUrl chapterNumberUri();

        /**
         * Get property 'pageStart'. Starting page number of the chapter 
         */
        QList<qint64> pageStarts() const;

        /**
         * Set property 'pageStart'. Starting page number of the chapter 
         */
        void setPageStarts( const QList<qint64>& value );

        /**
         * Add a value to property 'pageStart'. Starting page number of 
         * the chapter 
         */
        void addPageStart( const qint64& value );

        /**
         * Get property 'pageStart'. Starting page number of the chapter 
         */
        qint64 pageStart() const;

        /**
         * Set property 'pageStart'. Starting page number of the chapter 
         */
        void setPageStart( const qint64& value );

        /**
         * \return The URI of the property 'pageStart'. 
         */
        static QUrl pageStartUri();

        /**
         * Get property 'pageEnd'. Ending page number of the chapter 
         */
        QList<qint64> pageEnds() const;

        /**
         * Set property 'pageEnd'. Ending page number of the chapter 
         */
        void setPageEnds( const QList<qint64>& value );

        /**
         * Add a value to property 'pageEnd'. Ending page number of the 
         * chapter 
         */
        void addPageEnd( const qint64& value );

        /**
         * Get property 'pageEnd'. Ending page number of the chapter 
         */
        qint64 pageEnd() const;

        /**
         * Set property 'pageEnd'. Ending page number of the chapter 
         */
        void setPageEnd( const qint64& value );

        /**
         * \return The URI of the property 'pageEnd'. 
         */
        static QUrl pageEndUri();

        /**
         * Retrieve a list of all available Chapter resources. This list 
         * consists of all resource of type Chapter that are stored in the 
         * local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<Chapter> allChapters();


        /**
         * \return The URI of the resource type that is used in Chapter instances.
         */
        static QString resourceTypeUri();

    protected:
       Chapter( const QString& uri, const QUrl& type );
       Chapter( const QUrl& uri, const QUrl& type );
    };
}

#endif
