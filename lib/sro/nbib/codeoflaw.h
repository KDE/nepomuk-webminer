/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _CODEOFLAW_H_
#define _CODEOFLAW_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Legislation;

}

#include "collection.h"


namespace Nepomuk2 {

    /**
     * A collection of statutes. 
     */
    class  CodeOfLaw : public Collection
    {
    public:
        /**
         * Create a new empty and invalid CodeOfLaw instance
         */
        CodeOfLaw();

        /**
         * Default copy constructor
         */
        CodeOfLaw( const CodeOfLaw& );
        CodeOfLaw( const Resource& );

        /**
         * Create a new CodeOfLaw instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        CodeOfLaw( const QString& uriOrIdentifier );

        /**
         * Create a new CodeOfLaw instance representing the resource
         * referenced by \a uri.
         */
        CodeOfLaw( const QUrl& uri );
        ~CodeOfLaw();

        CodeOfLaw& operator=( const CodeOfLaw& );

        /**
         * Get property 'legislation'. links to a legislation (Bill, 
         * Statute) in a Code of Law 
         */
        QList<Legislation> legislations() const;

        /**
         * Set property 'legislation'. links to a legislation (Bill, 
         * Statute) in a Code of Law 
         */
        void setLegislations( const QList<Legislation>& value );

        /**
         * Add a value to property 'legislation'. links to a legislation 
         * (Bill, Statute) in a Code of Law 
         */
        void addLegislation( const Legislation& value );

        /**
         * \return The URI of the property 'legislation'. 
         */
        static QUrl legislationUri();

        /**
         * Get property 'codeNumber'. The code number of an CodeOfLaw 
         */
        QStringList codeNumbers() const;

        /**
         * Set property 'codeNumber'. The code number of an CodeOfLaw 
         */
        void setCodeNumbers( const QStringList& value );

        /**
         * Add a value to property 'codeNumber'. The code number of an CodeOfLaw 
         */
        void addCodeNumber( const QString& value );

        /**
         * Get property 'codeNumber'. The code number of an CodeOfLaw 
         */
        QString codeNumber() const;

        /**
         * Set property 'codeNumber'. The code number of an CodeOfLaw 
         */
        void setCodeNumber( const QString& value );

        /**
         * \return The URI of the property 'codeNumber'. 
         */
        static QUrl codeNumberUri();

        /**
         * Get all resources that have this resource set as property 'codeOfLaw'. 
         * The code of law the legislation is contained in \sa ResourceManager::allResourcesWithProperty 
         */
        QList<Legislation> codeOfLawOf() const;

        /**
         * Retrieve a list of all available CodeOfLaw resources. This 
         * list consists of all resource of type CodeOfLaw that are stored 
         * in the local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<CodeOfLaw> allCodeOfLaws();


        /**
         * \return The URI of the resource type that is used in CodeOfLaw instances.
         */
        static QString resourceTypeUri();

    protected:
       CodeOfLaw( const QString& uri, const QUrl& type );
       CodeOfLaw( const QUrl& uri, const QUrl& type );
    };
}

#endif
