/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _LEGALCASEDOCUMENT_H_
#define _LEGALCASEDOCUMENT_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class CourtReporter;

}

#include "legaldocument.h"


namespace Nepomuk2 {

    /**
     * A document accompanying a legal case. 
     */
    class  LegalCaseDocument : public LegalDocument
    {
    public:
        /**
         * Create a new empty and invalid LegalCaseDocument instance
         */
        LegalCaseDocument();

        /**
         * Default copy constructor
         */
        LegalCaseDocument( const LegalCaseDocument& );
        LegalCaseDocument( const Resource& );

        /**
         * Create a new LegalCaseDocument instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        LegalCaseDocument( const QString& uriOrIdentifier );

        /**
         * Create a new LegalCaseDocument instance representing the resource
         * referenced by \a uri.
         */
        LegalCaseDocument( const QUrl& uri );
        ~LegalCaseDocument();

        LegalCaseDocument& operator=( const LegalCaseDocument& );

        /**
         * Get property 'courtReporter'. Links case document to the collection 
         * of legal cases it belongs to. 
         */
        QList<CourtReporter> courtReporters() const;

        /**
         * Set property 'courtReporter'. Links case document to the collection 
         * of legal cases it belongs to. 
         */
        void setCourtReporters( const QList<CourtReporter>& value );

        /**
         * Add a value to property 'courtReporter'. Links case document 
         * to the collection of legal cases it belongs to. 
         */
        void addCourtReporter( const CourtReporter& value );

        /**
         * Get property 'courtReporter'. Links case document to the collection 
         * of legal cases it belongs to. 
         */
        CourtReporter courtReporter() const;

        /**
         * Set property 'courtReporter'. Links case document to the collection 
         * of legal cases it belongs to. 
         */
        void setCourtReporter( const CourtReporter& value );

        /**
         * \return The URI of the property 'courtReporter'. 
         */
        static QUrl courtReporterUri();

        /**
         * Retrieve a list of all available LegalCaseDocument resources. 
         * This list consists of all resource of type LegalCaseDocument 
         * that are stored in the local Nepomuk meta data storage and any 
         * changes made locally. Be aware that in some cases this list can 
         * get very big. Then it might be better to use libKNep directly. 
         */
        static QList<LegalCaseDocument> allLegalCaseDocuments();


        /**
         * \return The URI of the resource type that is used in LegalCaseDocument instances.
         */
        static QString resourceTypeUri();

    protected:
       LegalCaseDocument( const QString& uri, const QUrl& type );
       LegalCaseDocument( const QUrl& uri, const QUrl& type );
    };
}

#endif
