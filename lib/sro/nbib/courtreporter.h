/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _COURTREPORTER_H_
#define _COURTREPORTER_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class LegalCaseDocument;

}

#include "collection.h"


namespace Nepomuk2 {

    /**
     * A collection of legal cases. 
     */
    class  CourtReporter : public Collection
    {
    public:
        /**
         * Create a new empty and invalid CourtReporter instance
         */
        CourtReporter();

        /**
         * Default copy constructor
         */
        CourtReporter( const CourtReporter& );
        CourtReporter( const Resource& );

        /**
         * Create a new CourtReporter instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        CourtReporter( const QString& uriOrIdentifier );

        /**
         * Create a new CourtReporter instance representing the resource
         * referenced by \a uri.
         */
        CourtReporter( const QUrl& uri );
        ~CourtReporter();

        CourtReporter& operator=( const CourtReporter& );

        /**
         * Get property 'legalCase'. Backlinks all legal cases from the 
         * court reporter it is from 
         */
        QList<LegalCaseDocument> legalCases() const;

        /**
         * Set property 'legalCase'. Backlinks all legal cases from the 
         * court reporter it is from 
         */
        void setLegalCases( const QList<LegalCaseDocument>& value );

        /**
         * Add a value to property 'legalCase'. Backlinks all legal cases 
         * from the court reporter it is from 
         */
        void addLegalCase( const LegalCaseDocument& value );

        /**
         * \return The URI of the property 'legalCase'. 
         */
        static QUrl legalCaseUri();

        /**
         * Retrieve a list of all available CourtReporter resources. 
         * This list consists of all resource of type CourtReporter that 
         * are stored in the local Nepomuk meta data storage and any changes 
         * made locally. Be aware that in some cases this list can get very 
         * big. Then it might be better to use libKNep directly. 
         */
        static QList<CourtReporter> allCourtReporters();


        /**
         * \return The URI of the resource type that is used in CourtReporter instances.
         */
        static QString resourceTypeUri();

    protected:
       CourtReporter( const QString& uri, const QUrl& type );
       CourtReporter( const QUrl& uri, const QUrl& type );
    };
}

#endif
