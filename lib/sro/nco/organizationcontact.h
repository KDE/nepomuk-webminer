/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _ORGANIZATIONCONTACT_H_
#define _ORGANIZATIONCONTACT_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Resource;
    class Affiliation;

}

#include "contact.h"


namespace Nepomuk2 {

    /**
     * A Contact that denotes on Organization. 
     */
    class  OrganizationContact : public Contact
    {
    public:
        /**
         * Create a new empty and invalid OrganizationContact instance
         */
        OrganizationContact();

        /**
         * Default copy constructor
         */
        OrganizationContact( const OrganizationContact& );
        OrganizationContact( const Resource& );

        /**
         * Create a new OrganizationContact instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        OrganizationContact( const QString& uriOrIdentifier );

        /**
         * Create a new OrganizationContact instance representing the resource
         * referenced by \a uri.
         */
        OrganizationContact( const QUrl& uri );
        ~OrganizationContact();

        OrganizationContact& operator=( const OrganizationContact& );

        /**
         * Get property 'logo'. Logo of a company. Inspired by the LOGO 
         * property defined in RFC 2426 sec. 3.5.3 
         */
        QList<Resource> logos() const;

        /**
         * Set property 'logo'. Logo of a company. Inspired by the LOGO 
         * property defined in RFC 2426 sec. 3.5.3 
         */
        void setLogos( const QList<Resource>& value );

        /**
         * Add a value to property 'logo'. Logo of a company. Inspired by 
         * the LOGO property defined in RFC 2426 sec. 3.5.3 
         */
        void addLogo( const Resource& value );

        /**
         * \return The URI of the property 'logo'. 
         */
        static QUrl logoUri();

        /**
         * Get all resources that have this resource set as property 'org'. 
         * Name of an organization or a unit within an organization the 
         * object represented by a Contact is associated with. An equivalent 
         * of the 'ORG' property defined in RFC 2426 Sec. 3.5.5 \sa ResourceManager::allResourcesWithProperty 
         */
        QList<Affiliation> orgOf() const;

        /**
         * Retrieve a list of all available OrganizationContact resources. 
         * This list consists of all resource of type OrganizationContact 
         * that are stored in the local Nepomuk meta data storage and any 
         * changes made locally. Be aware that in some cases this list can 
         * get very big. Then it might be better to use libKNep directly. 
         */
        static QList<OrganizationContact> allOrganizationContacts();


        /**
         * \return The URI of the resource type that is used in OrganizationContact instances.
         */
        static QString resourceTypeUri();

    protected:
       OrganizationContact( const QString& uri, const QUrl& type );
       OrganizationContact( const QUrl& uri, const QUrl& type );
    };
}

#endif
