/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _MEDIA_H_
#define _MEDIA_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Resource;

}

#include <Nepomuk2/Resource>


namespace Nepomuk2 {


    class  Media : public Resource
    {
    public:
        /**
         * Create a new empty and invalid Media instance
         */
        Media();

        /**
         * Default copy constructor
         */
        Media( const Media& );
        Media( const Resource& );

        /**
         * Create a new Media instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        Media( const QString& uriOrIdentifier );

        /**
         * Create a new Media instance representing the resource
         * referenced by \a uri.
         */
        Media( const QUrl& uri );
        ~Media();

        Media& operator=( const Media& );

        /**
         * Get property 'genre'. Genre 
         */
        QStringList genres() const;

        /**
         * Set property 'genre'. Genre 
         */
        void setGenres( const QStringList& value );

        /**
         * Add a value to property 'genre'. Genre 
         */
        void addGenre( const QString& value );

        /**
         * \return The URI of the property 'genre'. 
         */
        static QUrl genreUri();

        /**
         * Get property 'artwork'. Associated Artwork 
         */
        QList<Resource> artworks() const;

        /**
         * Set property 'artwork'. Associated Artwork 
         */
        void setArtworks( const QList<Resource>& value );

        /**
         * Add a value to property 'artwork'. Associated Artwork 
         */
        void addArtwork( const Resource& value );

        /**
         * \return The URI of the property 'artwork'. 
         */
        static QUrl artworkUri();

        /**
         * Get property 'releaseDate'. The date the media was released. 
         */
        QList<QDateTime> releaseDates() const;

        /**
         * Set property 'releaseDate'. The date the media was released. 
         */
        void setReleaseDates( const QList<QDateTime>& value );

        /**
         * Add a value to property 'releaseDate'. The date the media was 
         * released. 
         */
        void addReleaseDate( const QDateTime& value );

        /**
         * Get property 'releaseDate'. The date the media was released. 
         */
        QDateTime releaseDate() const;

        /**
         * Set property 'releaseDate'. The date the media was released. 
         */
        void setReleaseDate( const QDateTime& value );

        /**
         * \return The URI of the property 'releaseDate'. 
         */
        static QUrl releaseDateUri();

        /**
         * Retrieve a list of all available Media resources. This list 
         * consists of all resource of type Media that are stored in the 
         * local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<Media> allMedias();


        /**
         * \return The URI of the resource type that is used in Media instances.
         */
        static QString resourceTypeUri();

    protected:
       Media( const QString& uri, const QUrl& type );
       Media( const QUrl& uri, const QUrl& type );
    };
}

#endif
