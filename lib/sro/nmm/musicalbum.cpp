/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#include <nepomuk2/variant.h>
#include <nepomuk2/resourcemanager.h>
#include "musicalbum.h"

#include "musicpiece.h"

#include <QtCore/QDateTime>
#include <QtCore/QDate>
#include <QtCore/QTime>


Nepomuk2::MusicAlbum::MusicAlbum()
  : Resource( QUrl(), QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicAlbum") )
{
}



Nepomuk2::MusicAlbum::MusicAlbum( const MusicAlbum& res )
  : Resource( res )
{
}


Nepomuk2::MusicAlbum::MusicAlbum( const Nepomuk2::Resource& res )
  : Resource( res )
{
}


Nepomuk2::MusicAlbum::MusicAlbum( const QString& uri )
  : Resource( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicAlbum") )
{
}

Nepomuk2::MusicAlbum::MusicAlbum( const QUrl& uri )
  : Resource( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicAlbum") )
{
}

Nepomuk2::MusicAlbum::MusicAlbum( const QString& uri, const QUrl& type )
  : Resource( uri, type )
{
}


Nepomuk2::MusicAlbum::MusicAlbum( const QUrl& uri, const QUrl& type )
  : Resource( uri, type )
{
}

Nepomuk2::MusicAlbum::~MusicAlbum()
{
}

Nepomuk2::MusicAlbum& Nepomuk2::MusicAlbum::operator=( const MusicAlbum& res )
{
    Resource::operator=( res );
    return *this;
}

QString Nepomuk2::MusicAlbum::resourceTypeUri()
{
    return QLatin1String("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#MusicAlbum");
}

QStringList Nepomuk2::MusicAlbum::musicCDIdentifiers() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicCDIdentifier") ).toStringList());
}

void Nepomuk2::MusicAlbum::setMusicCDIdentifiers( const QStringList& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicCDIdentifier"), Variant( value ) );
}

void Nepomuk2::MusicAlbum::addMusicCDIdentifier( const QString& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicCDIdentifier") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicCDIdentifier"), v );
}

QUrl Nepomuk2::MusicAlbum::musicCDIdentifierUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicCDIdentifier");
}

QStringList Nepomuk2::MusicAlbum::internationalStandardRecordingCodes() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#internationalStandardRecordingCode") ).toStringList());
}

void Nepomuk2::MusicAlbum::setInternationalStandardRecordingCodes( const QStringList& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#internationalStandardRecordingCode"), Variant( value ) );
}

void Nepomuk2::MusicAlbum::addInternationalStandardRecordingCode( const QString& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#internationalStandardRecordingCode") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#internationalStandardRecordingCode"), v );
}

QString Nepomuk2::MusicAlbum::internationalStandardRecordingCode() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#internationalStandardRecordingCode") ).toStringList() << QString() ).first();
}

void Nepomuk2::MusicAlbum::setInternationalStandardRecordingCode( const QString& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#internationalStandardRecordingCode"), Variant( value ) );
}

QUrl Nepomuk2::MusicAlbum::internationalStandardRecordingCodeUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#internationalStandardRecordingCode");
}

QStringList Nepomuk2::MusicAlbum::musicBrainzAlbumIDs() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicBrainzAlbumID") ).toStringList());
}

void Nepomuk2::MusicAlbum::setMusicBrainzAlbumIDs( const QStringList& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicBrainzAlbumID"), Variant( value ) );
}

void Nepomuk2::MusicAlbum::addMusicBrainzAlbumID( const QString& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicBrainzAlbumID") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicBrainzAlbumID"), v );
}

QString Nepomuk2::MusicAlbum::musicBrainzAlbumID() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicBrainzAlbumID") ).toStringList() << QString() ).first();
}

void Nepomuk2::MusicAlbum::setMusicBrainzAlbumID( const QString& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicBrainzAlbumID"), Variant( value ) );
}

QUrl Nepomuk2::MusicAlbum::musicBrainzAlbumIDUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#musicBrainzAlbumID");
}

QList<double> Nepomuk2::MusicAlbum::albumGains() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumGain") ).toDoubleList());
}

void Nepomuk2::MusicAlbum::setAlbumGains( const QList<double>& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumGain"), Variant( value ) );
}

void Nepomuk2::MusicAlbum::addAlbumGain( const double& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumGain") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumGain"), v );
}

double Nepomuk2::MusicAlbum::albumGain() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumGain") ).toDoubleList() << 0.0 ).first();
}

void Nepomuk2::MusicAlbum::setAlbumGain( const double& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumGain"), Variant( value ) );
}

QUrl Nepomuk2::MusicAlbum::albumGainUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumGain");
}

QList<double> Nepomuk2::MusicAlbum::albumPeakGains() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumPeakGain") ).toDoubleList());
}

void Nepomuk2::MusicAlbum::setAlbumPeakGains( const QList<double>& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumPeakGain"), Variant( value ) );
}

void Nepomuk2::MusicAlbum::addAlbumPeakGain( const double& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumPeakGain") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumPeakGain"), v );
}

double Nepomuk2::MusicAlbum::albumPeakGain() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumPeakGain") ).toDoubleList() << 0.0 ).first();
}

void Nepomuk2::MusicAlbum::setAlbumPeakGain( const double& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumPeakGain"), Variant( value ) );
}

QUrl Nepomuk2::MusicAlbum::albumPeakGainUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumPeakGain");
}

QList<qint64> Nepomuk2::MusicAlbum::albumTrackCounts() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumTrackCount") ).toInt64List());
}

void Nepomuk2::MusicAlbum::setAlbumTrackCounts( const QList<qint64>& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumTrackCount"), Variant( value ) );
}

void Nepomuk2::MusicAlbum::addAlbumTrackCount( const qint64& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumTrackCount") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumTrackCount"), v );
}

qint64 Nepomuk2::MusicAlbum::albumTrackCount() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumTrackCount") ).toInt64List() << 0 ).first();
}

void Nepomuk2::MusicAlbum::setAlbumTrackCount( const qint64& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumTrackCount"), Variant( value ) );
}

QUrl Nepomuk2::MusicAlbum::albumTrackCountUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#albumTrackCount");
}

QList<qint64> Nepomuk2::MusicAlbum::setSizes() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#setSize") ).toInt64List());
}

void Nepomuk2::MusicAlbum::setSetSizes( const QList<qint64>& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#setSize"), Variant( value ) );
}

void Nepomuk2::MusicAlbum::addSetSize( const qint64& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#setSize") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#setSize"), v );
}

qint64 Nepomuk2::MusicAlbum::setSize() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#setSize") ).toInt64List() << 0 ).first();
}

void Nepomuk2::MusicAlbum::setSetSize( const qint64& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#setSize"), Variant( value ) );
}

QUrl Nepomuk2::MusicAlbum::setSizeUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2009/02/19/nmm#setSize");
}


