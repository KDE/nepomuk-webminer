/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _TVSEASON_H_
#define _TVSEASON_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class TVShow;
    class TVSeries;

}

#include <Nepomuk2/Resource>


namespace Nepomuk2 {

    /**
     * A season of a TV Show 
     */
    class  TVSeason : public Resource
    {
    public:
        /**
         * Create a new empty and invalid TVSeason instance
         */
        TVSeason();

        /**
         * Default copy constructor
         */
        TVSeason( const TVSeason& );
        TVSeason( const Resource& );

        /**
         * Create a new TVSeason instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        TVSeason( const QString& uriOrIdentifier );

        /**
         * Create a new TVSeason instance representing the resource
         * referenced by \a uri.
         */
        TVSeason( const QUrl& uri );
        ~TVSeason();

        TVSeason& operator=( const TVSeason& );

        /**
         * Get property 'seasonNumber'. The number of a season 
         */
        QList<qint64> seasonNumbers() const;

        /**
         * Set property 'seasonNumber'. The number of a season 
         */
        void setSeasonNumbers( const QList<qint64>& value );

        /**
         * Add a value to property 'seasonNumber'. The number of a season 
         */
        void addSeasonNumber( const qint64& value );

        /**
         * Get property 'seasonNumber'. The number of a season 
         */
        qint64 seasonNumber() const;

        /**
         * Set property 'seasonNumber'. The number of a season 
         */
        void setSeasonNumber( const qint64& value );

        /**
         * \return The URI of the property 'seasonNumber'. 
         */
        static QUrl seasonNumberUri();

        /**
         * Get property 'seasonOf'. Relates a TV Season to its series 
         */
        QList<TVSeries> seasonOfs() const;

        /**
         * Set property 'seasonOf'. Relates a TV Season to its series 
         */
        void setSeasonOfs( const QList<TVSeries>& value );

        /**
         * Add a value to property 'seasonOf'. Relates a TV Season to its 
         * series 
         */
        void addSeasonOf( const TVSeries& value );

        /**
         * Get property 'seasonOf'. Relates a TV Season to its series 
         */
        TVSeries seasonOf() const;

        /**
         * Set property 'seasonOf'. Relates a TV Season to its series 
         */
        void setSeasonOf( const TVSeries& value );

        /**
         * \return The URI of the property 'seasonOf'. 
         */
        static QUrl seasonOfUri();

        /**
         * Get property 'SeasonEpisode'. Relates a TV Show season to its 
         * episodes 
         */
        QList<TVShow> seasonEpisodes() const;

        /**
         * Set property 'SeasonEpisode'. Relates a TV Show season to its 
         * episodes 
         */
        void setSeasonEpisodes( const QList<TVShow>& value );

        /**
         * Add a value to property 'SeasonEpisode'. Relates a TV Show season 
         * to its episodes 
         */
        void addSeasonEpisode( const TVShow& value );

        /**
         * \return The URI of the property 'SeasonEpisode'. 
         */
        static QUrl seasonEpisodeUri();

        /**
         * Retrieve a list of all available TVSeason resources. This list 
         * consists of all resource of type TVSeason that are stored in 
         * the local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<TVSeason> allTVSeasons();


        /**
         * \return The URI of the resource type that is used in TVSeason instances.
         */
        static QString resourceTypeUri();

    protected:
       TVSeason( const QString& uri, const QUrl& type );
       TVSeason( const QUrl& uri, const QUrl& type );
    };
}

#endif
