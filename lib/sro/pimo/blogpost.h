/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _BLOGPOST_H_
#define _BLOGPOST_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {

}

#include "document.h"


namespace Nepomuk2 {

    /**
     * A blog note. You just want to write something down right now and 
     * need a place to do that. Add a blog-note! This is an example class 
     * for a document type, there are more detailled ontologies to 
     * model Blog-Posts (like SIOC). 
     */
    class  BlogPost : public Document
    {
    public:
        /**
         * Create a new empty and invalid BlogPost instance
         */
        BlogPost();

        /**
         * Default copy constructor
         */
        BlogPost( const BlogPost& );
        BlogPost( const Resource& );

        /**
         * Create a new BlogPost instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        BlogPost( const QString& uriOrIdentifier );

        /**
         * Create a new BlogPost instance representing the resource
         * referenced by \a uri.
         */
        BlogPost( const QUrl& uri );
        ~BlogPost();

        BlogPost& operator=( const BlogPost& );

        /**
         * Retrieve a list of all available BlogPost resources. This list 
         * consists of all resource of type BlogPost that are stored in 
         * the local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<BlogPost> allBlogPosts();


        /**
         * \return The URI of the resource type that is used in BlogPost instances.
         */
        static QString resourceTypeUri();

    protected:
       BlogPost( const QString& uri, const QUrl& type );
       BlogPost( const QUrl& uri, const QUrl& type );
    };
}

#endif
