/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#include <nepomuk2/variant.h>
#include <nepomuk2/resourcemanager.h>
#include "task.h"



#include <QtCore/QDateTime>
#include <QtCore/QDate>
#include <QtCore/QTime>


Nepomuk2::Task::Task()
  : ProcessConcept( QUrl(), QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#Task") )
{
}



Nepomuk2::Task::Task( const Task& res )
  : ProcessConcept( res )
{
}


Nepomuk2::Task::Task( const Nepomuk2::Resource& res )
  : ProcessConcept( res )
{
}


Nepomuk2::Task::Task( const QString& uri )
  : ProcessConcept( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#Task") )
{
}

Nepomuk2::Task::Task( const QUrl& uri )
  : ProcessConcept( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#Task") )
{
}

Nepomuk2::Task::Task( const QString& uri, const QUrl& type )
  : ProcessConcept( uri, type )
{
}


Nepomuk2::Task::Task( const QUrl& uri, const QUrl& type )
  : ProcessConcept( uri, type )
{
}

Nepomuk2::Task::~Task()
{
}

Nepomuk2::Task& Nepomuk2::Task::operator=( const Task& res )
{
    Resource::operator=( res );
    return *this;
}

QString Nepomuk2::Task::resourceTypeUri()
{
    return QLatin1String("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#Task");
}

QList<QDateTime> Nepomuk2::Task::taskDueTimes() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#taskDueTime") ).toDateTimeList());
}

void Nepomuk2::Task::setTaskDueTimes( const QList<QDateTime>& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#taskDueTime"), Variant( value ) );
}

void Nepomuk2::Task::addTaskDueTime( const QDateTime& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#taskDueTime") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#taskDueTime"), v );
}

QDateTime Nepomuk2::Task::taskDueTime() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#taskDueTime") ).toDateTimeList() << QDateTime() ).first();
}

void Nepomuk2::Task::setTaskDueTime( const QDateTime& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#taskDueTime"), Variant( value ) );
}

QUrl Nepomuk2::Task::taskDueTimeUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/11/01/pimo#taskDueTime");
}


