/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _INSTANCEBASE_H_
#define _INSTANCEBASE_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Resource;

}

#include "resource.h"


namespace Nepomuk2 {


    class  InstanceBase : public Resource
    {
    public:
        /**
         * Create a new empty and invalid InstanceBase instance
         */
        InstanceBase();

        /**
         * Default copy constructor
         */
        InstanceBase( const InstanceBase& );
        InstanceBase( const Resource& );

        /**
         * Create a new InstanceBase instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        InstanceBase( const QString& uriOrIdentifier );

        /**
         * Create a new InstanceBase instance representing the resource
         * referenced by \a uri.
         */
        InstanceBase( const QUrl& uri );
        ~InstanceBase();

        InstanceBase& operator=( const InstanceBase& );

        /**
         * Get property 'isDataGraphFor'. Links a named graph to the resource 
         * for which it contains metadata. Its typical usage would be to 
         * link the graph containing extracted file metadata to the file 
         * resource. This allows for easy maintenance later on. 
         */
        QList<Resource> isDataGraphFors() const;

        /**
         * Set property 'isDataGraphFor'. Links a named graph to the resource 
         * for which it contains metadata. Its typical usage would be to 
         * link the graph containing extracted file metadata to the file 
         * resource. This allows for easy maintenance later on. 
         */
        void setIsDataGraphFors( const QList<Resource>& value );

        /**
         * Add a value to property 'isDataGraphFor'. Links a named graph 
         * to the resource for which it contains metadata. Its typical 
         * usage would be to link the graph containing extracted file metadata 
         * to the file resource. This allows for easy maintenance later 
         * on. 
         */
        void addIsDataGraphFor( const Resource& value );

        /**
         * \return The URI of the property 'isDataGraphFor'. 
         */
        static QUrl isDataGraphForUri();

        /**
         * Retrieve a list of all available InstanceBase resources. This 
         * list consists of all resource of type InstanceBase that are 
         * stored in the local Nepomuk meta data storage and any changes 
         * made locally. Be aware that in some cases this list can get very 
         * big. Then it might be better to use libKNep directly. 
         */
        static QList<InstanceBase> allInstanceBases();


        /**
         * \return The URI of the resource type that is used in InstanceBase instances.
         */
        static QString resourceTypeUri();

    protected:
       InstanceBase( const QString& uri, const QUrl& type );
       InstanceBase( const QUrl& uri, const QUrl& type );
    };
}

#endif
