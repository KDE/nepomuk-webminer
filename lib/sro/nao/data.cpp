/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#include <nepomuk2/variant.h>
#include <nepomuk2/resourcemanager.h>
#include "data.h"



#include <QtCore/QDateTime>
#include <QtCore/QDate>
#include <QtCore/QTime>


Nepomuk2::Data::Data()
  : Resource( QUrl(), QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#Data") )
{
}



Nepomuk2::Data::Data( const Data& res )
  : Resource( res )
{
}


Nepomuk2::Data::Data( const Nepomuk2::Resource& res )
  : Resource( res )
{
}


Nepomuk2::Data::Data( const QString& uri )
  : Resource( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#Data") )
{
}

Nepomuk2::Data::Data( const QUrl& uri )
  : Resource( uri, QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#Data") )
{
}

Nepomuk2::Data::Data( const QString& uri, const QUrl& type )
  : Resource( uri, type )
{
}


Nepomuk2::Data::Data( const QUrl& uri, const QUrl& type )
  : Resource( uri, type )
{
}

Nepomuk2::Data::~Data()
{
}

Nepomuk2::Data& Nepomuk2::Data::operator=( const Data& res )
{
    Resource::operator=( res );
    return *this;
}

QString Nepomuk2::Data::resourceTypeUri()
{
    return QLatin1String("http://www.semanticdesktop.org/ontologies/2007/08/15/nrl#Data");
}

QStringList Nepomuk2::Data::defaultNamespaceAbbreviations() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation") ).toStringList());
}

void Nepomuk2::Data::setDefaultNamespaceAbbreviations( const QStringList& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation"), Variant( value ) );
}

void Nepomuk2::Data::addDefaultNamespaceAbbreviation( const QString& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation"), v );
}

QString Nepomuk2::Data::defaultNamespaceAbbreviation() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation") ).toStringList() << QString() ).first();
}

void Nepomuk2::Data::setDefaultNamespaceAbbreviation( const QString& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation"), Variant( value ) );
}

QUrl Nepomuk2::Data::defaultNamespaceAbbreviationUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespaceAbbreviation");
}

QList<double> Nepomuk2::Data::versions() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version") ).toDoubleList());
}

void Nepomuk2::Data::setVersions( const QList<double>& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version"), Variant( value ) );
}

void Nepomuk2::Data::addVersion( const double& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version"), v );
}

double Nepomuk2::Data::version() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version") ).toDoubleList() << 0.0 ).first();
}

void Nepomuk2::Data::setVersion( const double& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version"), Variant( value ) );
}

QUrl Nepomuk2::Data::versionUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#version");
}

QStringList Nepomuk2::Data::defaultNamespaces() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace") ).toStringList());
}

void Nepomuk2::Data::setDefaultNamespaces( const QStringList& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace"), Variant( value ) );
}

void Nepomuk2::Data::addDefaultNamespace( const QString& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace"), v );
}

QString Nepomuk2::Data::defaultNamespace() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace") ).toStringList() << QString() ).first();
}

void Nepomuk2::Data::setDefaultNamespace( const QString& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace"), Variant( value ) );
}

QUrl Nepomuk2::Data::defaultNamespaceUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#hasDefaultNamespace");
}

QStringList Nepomuk2::Data::statuses() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status") ).toStringList());
}

void Nepomuk2::Data::setStatuses( const QStringList& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status"), Variant( value ) );
}

void Nepomuk2::Data::addStatus( const QString& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status"), v );
}

QString Nepomuk2::Data::status() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status") ).toStringList() << QString() ).first();
}

void Nepomuk2::Data::setStatus( const QString& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status"), Variant( value ) );
}

QUrl Nepomuk2::Data::statusUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#status");
}

QStringList Nepomuk2::Data::engineeringTools() const
{
    return ( property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#engineeringTool") ).toStringList());
}

void Nepomuk2::Data::setEngineeringTools( const QStringList& value )
{
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#engineeringTool"), Variant( value ) );
}

void Nepomuk2::Data::addEngineeringTool( const QString& value )
{
    Variant v = property( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#engineeringTool") );
    v.append( value );
    setProperty( QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#engineeringTool"), v );
}

QUrl Nepomuk2::Data::engineeringToolUri()
{
    return QUrl::fromEncoded("http://www.semanticdesktop.org/ontologies/2007/08/15/nao#engineeringTool");
}


