/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _DOCUMENTGRAPH_H_
#define _DOCUMENTGRAPH_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {

}

#include "resource.h"


namespace Nepomuk2 {


    class  DocumentGraph : public Resource
    {
    public:
        /**
         * Create a new empty and invalid DocumentGraph instance
         */
        DocumentGraph();

        /**
         * Default copy constructor
         */
        DocumentGraph( const DocumentGraph& );
        DocumentGraph( const Resource& );

        /**
         * Create a new DocumentGraph instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        DocumentGraph( const QString& uriOrIdentifier );

        /**
         * Create a new DocumentGraph instance representing the resource
         * referenced by \a uri.
         */
        DocumentGraph( const QUrl& uri );
        ~DocumentGraph();

        DocumentGraph& operator=( const DocumentGraph& );

        /**
         * Get property 'serializationLanguage'. States the serialization 
         * language for a named graph that is represented within a document 
         */
        QStringList serializationLanguages() const;

        /**
         * Set property 'serializationLanguage'. States the serialization 
         * language for a named graph that is represented within a document 
         */
        void setSerializationLanguages( const QStringList& value );

        /**
         * Add a value to property 'serializationLanguage'. States the 
         * serialization language for a named graph that is represented 
         * within a document 
         */
        void addSerializationLanguage( const QString& value );

        /**
         * Get property 'serializationLanguage'. States the serialization 
         * language for a named graph that is represented within a document 
         */
        QString serializationLanguage() const;

        /**
         * Set property 'serializationLanguage'. States the serialization 
         * language for a named graph that is represented within a document 
         */
        void setSerializationLanguage( const QString& value );

        /**
         * \return The URI of the property 'serializationLanguage'. 
         */
        static QUrl serializationLanguageUri();

        /**
         * Retrieve a list of all available DocumentGraph resources. 
         * This list consists of all resource of type DocumentGraph that 
         * are stored in the local Nepomuk meta data storage and any changes 
         * made locally. Be aware that in some cases this list can get very 
         * big. Then it might be better to use libKNep directly. 
         */
        static QList<DocumentGraph> allDocumentGraphs();


        /**
         * \return The URI of the resource type that is used in DocumentGraph instances.
         */
        static QString resourceTypeUri();

    protected:
       DocumentGraph( const QString& uri, const QUrl& type );
       DocumentGraph( const QUrl& uri, const QUrl& type );
    };
}

#endif
