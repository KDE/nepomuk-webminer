/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _LOCALFILEDATAOBJECT_H_
#define _LOCALFILEDATAOBJECT_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {

}

#include "filedataobject.h"


namespace Nepomuk2 {

    /**
     * A local file data object which is stored on a local file system. 
     * Its nie:url always uses the file:/ protocol. The main use of 
     * this class is to distinguish local and non-local files. 
     */
    class  LocalFileDataObject : public FileDataObject
    {
    public:
        /**
         * Create a new empty and invalid LocalFileDataObject instance
         */
        LocalFileDataObject();

        /**
         * Default copy constructor
         */
        LocalFileDataObject( const LocalFileDataObject& );
        LocalFileDataObject( const Resource& );

        /**
         * Create a new LocalFileDataObject instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        LocalFileDataObject( const QString& uriOrIdentifier );

        /**
         * Create a new LocalFileDataObject instance representing the resource
         * referenced by \a uri.
         */
        LocalFileDataObject( const QUrl& uri );
        ~LocalFileDataObject();

        LocalFileDataObject& operator=( const LocalFileDataObject& );

        /**
         * Retrieve a list of all available LocalFileDataObject resources. 
         * This list consists of all resource of type LocalFileDataObject 
         * that are stored in the local Nepomuk meta data storage and any 
         * changes made locally. Be aware that in some cases this list can 
         * get very big. Then it might be better to use libKNep directly. 
         */
        static QList<LocalFileDataObject> allLocalFileDataObjects();


        /**
         * \return The URI of the resource type that is used in LocalFileDataObject instances.
         */
        static QString resourceTypeUri();

    protected:
       LocalFileDataObject( const QString& uri, const QUrl& type );
       LocalFileDataObject( const QUrl& uri, const QUrl& type );
    };
}

#endif
