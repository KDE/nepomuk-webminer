/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _BOOKMARKFOLDER_H_
#define _BOOKMARKFOLDER_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Bookmark;
    class BookmarkFolder;

}

#include "informationelement.h"


namespace Nepomuk2 {

    /**
     * A folder with bookmarks of a webbrowser. Use nfo:containsBookmark 
     * to relate Bookmarks. Folders can contain subfolders, use containsBookmarkFolder 
     * to relate them. 
     */
    class  BookmarkFolder : public InformationElement
    {
    public:
        /**
         * Create a new empty and invalid BookmarkFolder instance
         */
        BookmarkFolder();

        /**
         * Default copy constructor
         */
        BookmarkFolder( const BookmarkFolder& );
        BookmarkFolder( const Resource& );

        /**
         * Create a new BookmarkFolder instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        BookmarkFolder( const QString& uriOrIdentifier );

        /**
         * Create a new BookmarkFolder instance representing the resource
         * referenced by \a uri.
         */
        BookmarkFolder( const QUrl& uri );
        ~BookmarkFolder();

        BookmarkFolder& operator=( const BookmarkFolder& );

        /**
         * Get property 'containsBookmarkFolder'. The folder contains 
         * a bookmark folder. 
         */
        QList<BookmarkFolder> containsBookmarkFolders() const;

        /**
         * Set property 'containsBookmarkFolder'. The folder contains 
         * a bookmark folder. 
         */
        void setContainsBookmarkFolders( const QList<BookmarkFolder>& value );

        /**
         * Add a value to property 'containsBookmarkFolder'. The folder 
         * contains a bookmark folder. 
         */
        void addContainsBookmarkFolder( const BookmarkFolder& value );

        /**
         * \return The URI of the property 'containsBookmarkFolder'. 
         */
        static QUrl containsBookmarkFolderUri();

        /**
         * Get property 'containsBookmark'. The folder contains a bookmark. 
         */
        QList<Bookmark> containsBookmarks() const;

        /**
         * Set property 'containsBookmark'. The folder contains a bookmark. 
         */
        void setContainsBookmarks( const QList<Bookmark>& value );

        /**
         * Add a value to property 'containsBookmark'. The folder contains 
         * a bookmark. 
         */
        void addContainsBookmark( const Bookmark& value );

        /**
         * \return The URI of the property 'containsBookmark'. 
         */
        static QUrl containsBookmarkUri();

        /**
         * Get all resources that have this resource set as property 'containsBookmarkFolder'. 
         * The folder contains a bookmark folder. \sa ResourceManager::allResourcesWithProperty 
         */
        QList<BookmarkFolder> containsBookmarkFolderOf() const;

        /**
         * Retrieve a list of all available BookmarkFolder resources. 
         * This list consists of all resource of type BookmarkFolder that 
         * are stored in the local Nepomuk meta data storage and any changes 
         * made locally. Be aware that in some cases this list can get very 
         * big. Then it might be better to use libKNep directly. 
         */
        static QList<BookmarkFolder> allBookmarkFolders();


        /**
         * \return The URI of the resource type that is used in BookmarkFolder instances.
         */
        static QString resourceTypeUri();

    protected:
       BookmarkFolder( const QString& uri, const QUrl& type );
       BookmarkFolder( const QUrl& uri, const QUrl& type );
    };
}

#endif
