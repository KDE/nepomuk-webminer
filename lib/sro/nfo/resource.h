/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _RESOURCE_H_
#define _RESOURCE_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {
    class Image;
    class FileDataObject;

}

#include "resource.h"


namespace Nepomuk2 {


    class  Resource : public Resource
    {
    public:
        /**
         * Create a new empty and invalid Resource instance
         */
        Resource();

        /**
         * Default copy constructor
         */
        Resource( const Resource& );
        Resource( const Resource& );

        /**
         * Create a new Resource instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        Resource( const QString& uriOrIdentifier );

        /**
         * Create a new Resource instance representing the resource
         * referenced by \a uri.
         */
        Resource( const QUrl& uri );
        ~Resource();

        Resource& operator=( const Resource& );

        /**
         * Get property 'depiction'. Relates an information element 
         * to an image which depicts said element. 
         */
        QList<Image> depictions() const;

        /**
         * Set property 'depiction'. Relates an information element 
         * to an image which depicts said element. 
         */
        void setDepictions( const QList<Image>& value );

        /**
         * Add a value to property 'depiction'. Relates an information 
         * element to an image which depicts said element. 
         */
        void addDepiction( const Image& value );

        /**
         * \return The URI of the property 'depiction'. 
         */
        static QUrl depictionUri();

        /**
         * Get all resources that have this resource set as property 'fileUrl'. 
         * URL of the file. It points at the location of the file. In cases 
         * where creating a simple file:// or http:// URL for a file is difficult 
         * (e.g. for files inside compressed archives) the applications 
         * are encouraged to use conventions defined by Apache Commons 
         * VFS Project at http://jakarta.apache.org/ commons/ vfs/ 
         * filesystems.html. \sa ResourceManager::allResourcesWithProperty 
         */
        QList<FileDataObject> fileUrlOf() const;

        /**
         * Retrieve a list of all available Resource resources. This list 
         * consists of all resource of type Resource that are stored in 
         * the local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<Resource> allResources();


        /**
         * \return The URI of the resource type that is used in Resource instances.
         */
        static QString resourceTypeUri();

    protected:
       Resource( const QString& uri, const QUrl& type );
       Resource( const QUrl& uri, const QUrl& type );
    };
}

#endif
