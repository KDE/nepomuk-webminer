/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _PAGINATEDTEXTDOCUMENT_H_
#define _PAGINATEDTEXTDOCUMENT_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {

}

#include "textdocument.h"


namespace Nepomuk2 {

    /**
     * A file containing a text document, that is unambiguously divided 
     * into pages. Examples might include PDF, DOC, PS, DVI etc. 
     */
    class  PaginatedTextDocument : public TextDocument
    {
    public:
        /**
         * Create a new empty and invalid PaginatedTextDocument instance
         */
        PaginatedTextDocument();

        /**
         * Default copy constructor
         */
        PaginatedTextDocument( const PaginatedTextDocument& );
        PaginatedTextDocument( const Resource& );

        /**
         * Create a new PaginatedTextDocument instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        PaginatedTextDocument( const QString& uriOrIdentifier );

        /**
         * Create a new PaginatedTextDocument instance representing the resource
         * referenced by \a uri.
         */
        PaginatedTextDocument( const QUrl& uri );
        ~PaginatedTextDocument();

        PaginatedTextDocument& operator=( const PaginatedTextDocument& );

        /**
         * Get property 'pageCount'. Number of pages. 
         */
        QList<qint64> pageCounts() const;

        /**
         * Set property 'pageCount'. Number of pages. 
         */
        void setPageCounts( const QList<qint64>& value );

        /**
         * Add a value to property 'pageCount'. Number of pages. 
         */
        void addPageCount( const qint64& value );

        /**
         * Get property 'pageCount'. Number of pages. 
         */
        qint64 pageCount() const;

        /**
         * Set property 'pageCount'. Number of pages. 
         */
        void setPageCount( const qint64& value );

        /**
         * \return The URI of the property 'pageCount'. 
         */
        static QUrl pageCountUri();

        /**
         * Retrieve a list of all available PaginatedTextDocument resources. 
         * This list consists of all resource of type PaginatedTextDocument 
         * that are stored in the local Nepomuk meta data storage and any 
         * changes made locally. Be aware that in some cases this list can 
         * get very big. Then it might be better to use libKNep directly. 
         */
        static QList<PaginatedTextDocument> allPaginatedTextDocuments();


        /**
         * \return The URI of the resource type that is used in PaginatedTextDocument instances.
         */
        static QString resourceTypeUri();

    protected:
       PaginatedTextDocument( const QString& uri, const QUrl& type );
       PaginatedTextDocument( const QUrl& uri, const QUrl& type );
    };
}

#endif
