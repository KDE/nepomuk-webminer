/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _WEBDATAOBJECT_H_
#define _WEBDATAOBJECT_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {

}

#include "dataobject.h"


namespace Nepomuk2 {

    /**
     * An information resources of which representations (files, 
     * streams) can be retrieved through a web server. They may be generated 
     * at retrieval time. Typical examples are pages served by PHP 
     * or AJAX or mp3 streams. 
     */
    class  WebDataObject : public DataObject
    {
    public:
        /**
         * Create a new empty and invalid WebDataObject instance
         */
        WebDataObject();

        /**
         * Default copy constructor
         */
        WebDataObject( const WebDataObject& );
        WebDataObject( const Resource& );

        /**
         * Create a new WebDataObject instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        WebDataObject( const QString& uriOrIdentifier );

        /**
         * Create a new WebDataObject instance representing the resource
         * referenced by \a uri.
         */
        WebDataObject( const QUrl& uri );
        ~WebDataObject();

        WebDataObject& operator=( const WebDataObject& );

        /**
         * Retrieve a list of all available WebDataObject resources. 
         * This list consists of all resource of type WebDataObject that 
         * are stored in the local Nepomuk meta data storage and any changes 
         * made locally. Be aware that in some cases this list can get very 
         * big. Then it might be better to use libKNep directly. 
         */
        static QList<WebDataObject> allWebDataObjects();


        /**
         * \return The URI of the resource type that is used in WebDataObject instances.
         */
        static QString resourceTypeUri();

    protected:
       WebDataObject( const QString& uri, const QUrl& type );
       WebDataObject( const QUrl& uri, const QUrl& type );
    };
}

#endif
