/*
 * This file is part of the Nepomuk KDE project.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * See the file "COPYING" for the exact licensing terms.
 */

/*
 * This file has been generated by the Nepomuk Resource class generator.
 * DO NOT EDIT THIS FILE.
 * ANY CHANGES WILL BE LOST.
 */

#ifndef _CURSOR_H_
#define _CURSOR_H_

class QDateTime;
class QDate;
class QTime;

namespace Nepomuk2 {

}

#include "rasterimage.h"


namespace Nepomuk2 {

    /**
     * A Cursor. 
     */
    class  Cursor : public RasterImage
    {
    public:
        /**
         * Create a new empty and invalid Cursor instance
         */
        Cursor();

        /**
         * Default copy constructor
         */
        Cursor( const Cursor& );
        Cursor( const Resource& );

        /**
         * Create a new Cursor instance representing the resource
         * referenced by \a uriOrIdentifier.
         */
        Cursor( const QString& uriOrIdentifier );

        /**
         * Create a new Cursor instance representing the resource
         * referenced by \a uri.
         */
        Cursor( const QUrl& uri );
        ~Cursor();

        Cursor& operator=( const Cursor& );

        /**
         * Retrieve a list of all available Cursor resources. This list 
         * consists of all resource of type Cursor that are stored in the 
         * local Nepomuk meta data storage and any changes made locally. 
         * Be aware that in some cases this list can get very big. Then it 
         * might be better to use libKNep directly. 
         */
        static QList<Cursor> allCursors();


        /**
         * \return The URI of the resource type that is used in Cursor instances.
         */
        static QString resourceTypeUri();

    protected:
       Cursor( const QString& uri, const QUrl& type );
       Cursor( const QUrl& uri, const QUrl& type );
    };
}

#endif
