
Nepomuk Metadata extractor

Idea:
* extract meta data from files (or existing Nepomuk::Resources)
* take this info and search the internet for more details
* python plugins (easy to write) handle the actual search.
* python plugins only create a simple dictionary (transformed into QVariantMap)
* the c++ part has nepomuk pipe classes, that transform such QVariantMap data into DMS calls

For more information run:

   make doc

and check the doxygen documentation

#################################################################
# Dependencies:
* Nepomuk
** SDO 0.10.0

* poppler (for pdf parsing)
* TagLib (for music parsing)
* Kross framework with working python interpreters
* For the python plugins:
  + imdbpy 4.9 - http://imdbpy.sourceforge.net/
  + Musicbrainz NGS (master) - https://github.com/alastair/python-musicbrainz-ngs/
  + tvdb_api module (master) - https://github.com/dbr/tvdb_api
  + json
  + BeautifulSoup
  + httplib2
  + urllib2
  + requests (for tvdbmal)

#################################################################
# install to the system

mkdir build
cd build
cmake ../ -DCMAKE_INSTALL_PREFIX=`kde4-config --prefix` -DCMAKE_BUILD_TYPE=release
make
make install

and start via metadatafetcher <url to file or folder>
or via right click service menu in dolphin

see metadatafetcher --help for more info

################################################################
# If you need to run cmake more often you can speed it up

Be sure to remove the cmake build directory otherwise this entry will be cached and can lead
to problems

add -DNOONTOLOGY=1 to the cmake call, to disable the long ontology class generation

Example:

mkdir build
cd build
cmake ../ -DCMAKE_INSTALL_PREFIX=`kde4-config --prefix` -DCMAKE_BUILD_TYPE=release -DNOONTOLOGY=1
make
make install